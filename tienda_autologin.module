<?php
/**
 * @file
 * Module for the Tienda autologin User Entity.
 */
use \Drupal\Core\Form\FormStateInterface;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Drupal\Core\Session\AccountInterface;
use GuzzleHttp\Exception\RequestException;
use Drupal\Component\Serialization\Json;
use Drupal\user\Entity\User;
use Drupal\Core\Url;
use Drupal\Core\Routing\TrustedRedirectResponse;

/**
 * Implements hook_form_alter().
 */
function tienda_autologin_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  switch ($form_id) {
    case 'user_register_form':
      $key = array_search('::validateForm', $form['#validate']);
      array_unshift($form['actions']['submit']['#validate'], 'tienda_autologin_user_register_submit');
      break;
    case 'user_login_form':
      $config =  \Drupal::config('tienda_autologin.configuration');
      if (@in_array('::validateFinal', $form['#validate'])) {
        if ($config->get('backend_url')) {
          $key = array_search('::validateFinal', $form['#validate']);
          $form['#validate'][$key] = 'tienda_autologin_auth_authenticate';
          $form['#validate'][] = 'tienda_autologin_get_account';
          $form['#validate'][] = '::validateFinal';
        }
      }
      break;
  }
}

/**
 * Registrar el usuario
 */
function tienda_autologin_user_register_submit(&$form, FormStateInterface $form_state) {
  $authentication = \Drupal::service('tienda_autologin.externalauth');
  $config =  \Drupal::config('tienda_autologin.configuration');

  $form_state->setValue('name', $form_state->getValue('mail'));
  $values = [
    "name" => $form_state->getValue('name'),
    "pass" => $form_state->getValue('pass'),
    "mail" => $form_state->getValue('mail')
  ];

  //enviar los valores de los campos disponibles
  $campos_disponibles_usuario = (array) Json::Decode($config->get('campos_disponibles_usuario_autologin'));
  foreach ($campos_disponibles_usuario as $field_name => $value) {
    if (!empty($form_state->getValue($value))) {
      $values[$field_name] = $form_state->getValue($value);
    }
  }
  
  $response = $authentication->save($values);
  if (!empty($response["error"]) && array_key_exists('uid', $response["error"])) {
    //loguear al usuario
    $user_name = $form_state->getValue('name');
    $user_pass = trim($form_state->getValue('pass'));

    $response = $authentication->login($user_name, $user_pass); 
    if (!empty($response['cookie'])) {
      $cookie_value = $response['cookie'];
      $form_state->setValue('current_user_cookie', $cookie_value);
      $session = \Drupal::request()->getSession();
      $session->set('tienda_autologin_user', $cookie_value);
  
      setcookie('tienda_autologin', $cookie_value, time() + 86400, '/');
    }
  
    return $form;
  }

  if (!empty($response["error"])) {
    $key = key($response["error"]);
    return $form_state->setErrorByName('name', $response["error"][$key]);
  }
}

/**
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 * @param $form_id
 */
function tienda_autologin_auth_authenticate(&$form, FormStateInterface $form_state) {
  if (!$form_state->get('uid')) {
    $user_name = $form_state->getValue('name');
    $user_pass = trim($form_state->getValue('pass'));

    $authentication = \Drupal::service('tienda_autologin.externalauth');
    $response = $authentication->login($user_name, $user_pass);

    if (!empty($response["error"])) {
      $key = key($response["error"]);
      return $form_state->setErrorByName('name', $response["error"][$key]);
    }

    $cookie_value = $response['cookie'];

    $content_user = $response['body'];
    $uid = $content_user['current_user']['uid'];

    $form_state->setValue('current_user_uid', $uid);
    $form_state->setValue('current_user_cookie', $cookie_value);

    $session = \Drupal::request()->getSession();
    $session->set('tienda_autologin_user', $cookie_value);
    setcookie('tienda_autologin', $cookie_value, time() + 86400, '/');
  }
}

/**
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 * @param $form_id
 */
function tienda_autologin_get_account(&$form, FormStateInterface $form_state) {
  $authentication = \Drupal::service('tienda_autologin.externalauth');
  $cookie_value = $form_state->getValue('current_user_cookie');

  //auto login
  $status_user = $authentication->getLoginStatus($cookie_value);
  if ($status_user) {
    $uid = $form_state->getValue('current_user_uid');
    $user_values = $authentication->getUser($cookie_value, $uid);

    //destroy values
    unset($user_values['uid']);
    unset($user_values['uuid']);

    $email = $user_values['mail'][0]['value'];
    if ($account = user_load_by_mail($email)) {
      //user_login_finalize($account);
    }
    else {// Create user object.
      $account = User::create();
      foreach ($user_values as $key => $datas) {
        foreach ($datas as $data) {
          $account->set($key, $data['value']);
        }
      }

      $account->enforceIsNew();
      $account->save();
    }
    $form_state->set('uid', $account->id());
  }
  return $form;
}

/**
 * Implements hook_user_login().
 */
function tienda_autologin_user_login($account) {
  $config =  \Drupal::config('tienda_autologin.configuration');
  $api_url = $config->get('backend_url');

  $session = \Drupal::request()->getSession();
  $cookie_value = $session->get('tienda_autologin_user', null);

  if (!empty($cookie_value)) {
    $host = \Drupal::request()->getSchemeAndHttpHost();
    $host = urlencode($host);
  
    $homeResponse = new RedirectResponse("{$api_url}/tienda/synclogin/{$cookie_value}?redirect={$host}");
    return $homeResponse->send();
  }
}

/**
 * hook_user_logout
 */
function tienda_autologin_user_logout(AccountInterface $account) {
  $config =  \Drupal::config('tienda_autologin.configuration');
  $api_url = $config->get('backend_url');

  $format = 'json';
  if (!empty($api_url)) {
    try {
      if (!empty($_COOKIE['tienda_autologin'])) {
        $cookie_value = $_COOKIE['tienda_autologin'];

        $client = \Drupal::httpClient();
        $response = $client->get("{$api_url}/user/logout?_format={$format}", [
          'headers' => [
            'Accept' => "application/{$format}", 
            'Content-Type' => "application/{$format}",
            'Cookie' => $cookie_value
          ],
          'verify' => boolval($config->get('certificate_url'))
        ]);
        $response = $response->getBody()->getContents();
    
        //destroy cookie tienda_autologin_user
        setcookie('tienda_autologin', '', \Drupal::time()->getRequestTime() - 3600, '/');
        unset($_COOKIE['tienda_autologin']);
  
       // $session = \Drupal::request()->getSession();
       // $session->remove('tienda_autologin_user');
      }
    } catch (RequestException $e) {
      if (!$e->hasResponse()) {
        throw $e;
      }
      $response = $e->getResponse();
  
      $data = Json::Decode($response->getBody()->getContents());
      $messenger = \Drupal::Messenger();
      $messenger->addMessage($data["message"],$messenger::TYPE_ERROR,true);
      $response = new RedirectResponse('user');
      return $response;
    }
  }
}